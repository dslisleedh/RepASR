# general settings
name: RePASR
model_type: RealESRShortcutModel
scale: 4
num_gpu: 4
manual_seed: 0
sample_step: 128
test_sample_step: 4

# ----------------- options for synthesizing training data in RealESRGANModel ----------------- #
# the first degradation process
resize_prob: [0.2, 0.7, 0.1]  # up, down, keep
resize_range: [0.15, 1.5]
gaussian_noise_prob: 0.5
noise_range: [1, 30]
poisson_scale_range: [0.05, 3]
gray_noise_prob: 0.4
jpeg_range: [30, 95]

# the second degradation process
second_blur_prob: 0.8
resize_prob2: [0.3, 0.4, 0.3]  # up, down, keep
resize_range2: [0.3, 1.2]
gaussian_noise_prob2: 0.5
noise_range2: [1, 25]
poisson_scale_range2: [0.05, 2.5]
gray_noise_prob2: 0.4
jpeg_range2: [30, 95]

gt_size: 256
queue_size: 180

# dataset and data loader settings
datasets:
  train:
    name: DDFLIP
    type: RealESRGANDataset
    dataroot_gt: /data/datasets/DDFL
    io_backend:
      type: disk

    blur_kernel_size: 21
    kernel_list: ['iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso']
    kernel_prob: [0.45, 0.25, 0.12, 0.03, 0.12, 0.03]
    sinc_prob: 0.1
    blur_sigma: [0.2, 3]
    betag_range: [0.5, 4]
    betap_range: [1, 2]

    blur_kernel_size2: 21
    kernel_list2: ['iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso']
    kernel_prob2: [0.45, 0.25, 0.12, 0.03, 0.12, 0.03]
    sinc_prob2: 0.1
    blur_sigma2: [0.2, 1.5]
    betag_range2: [0.5, 4]
    betap_range2: [1, 2]

    final_sinc_prob: 0.8

    gt_size: 256
    use_hflip: True
    use_rot: False

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 12
    batch_size_per_gpu: 12
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  # Uncomment these for validation
  val:
    name: validation
    type: SingleImageDataset
    dataroot_lq: /data/datasets/RealSRSet+5images
    io_backend:
      type: disk

# network structures
network_g:
  type: HierachicalWindowDiT
  dim: 48
  window_sizes: [8, 16, 16, 24, 32, 64]
  num_heads: 3
  exp_ratio: 2
  num_blocks: 10
  align_layer: 0.49

# path
path:
  # use the pre-trained Real-ESRNet model
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: AdamW
    lr: !!float 5e-4
    weight_decay: 0
    betas: [0.9, 0.99]
  
  scheduler:
    type: MultiStepLR
    milestones: [100000, 300000]
    gamma: 0.5

  total_iter: 500000
  warmup_iter: -1  # no warm up

  # losses
  flow_opt:
    type: MSELoss
    loss_weight: 1.0
    reduction: mean
  align_opt:
    type: NegativeCosineLoss
    loss_weight: 0.5
  consistency_opt:
    type: MSELoss
    loss_weight: 1.0
    reduction: mean
  
# Uncomment these for validation
# validation settings
val:
  val_freq: !!float 1e4
  save_img: True

#   metrics:
#     psnr: # metric name
#       type: calculate_psnr
#       crop_border: 4
#       test_y_channel: false

# logging settings
logger:
  print_freq: 200
  save_checkpoint_freq: !!float 1e4
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500